# Trade Reactive Advice
# These important actions provide reactive advice related to trade situations
# First Trade Building - Shown when player builds their first trade building
trade_building_advice = {
	type = important_action
	# Check if this is the player's first trade building
	trigger = {
		exists = this
		is_ai = no
		# Check if tutorials are enabled for this player
		is_tutorial_enabled = yes
		# Player must have seen the trade introduction
		has_character_flag = viewed_trade_introduction_step1
		# But not have seen this advice yet
		NOT = {
			has_character_flag = seen_trade_building_advice
		}
		# And must have just built a trade building
		any_held_title = {
			tier = county
			any_county_holding = {
				OR = {
					has_building = market_square
					has_building = trading_post
					has_building = caravanserai
				}
				# Recently constructed (within the last 30 days)
				has_holding_modifier = recently_constructed_building
			}
		}
	}
	# If the player doesn't have the flag yet, add it to avoid showing this again
	immediate = {
		add_character_flag = {
			flag = seen_trade_building_advice
			days = -1
		}
	}
	# Function to check if this advice should be created
	check_create_action = {
		save_temporary_scope_as = character
		# Create the advice with proper title and description 
		create_important_action = {
			title = trade_building_advice_title
			desc = trade_building_advice_desc
			# Add sound effect for notification
			soundeffect = "event:/SFX/UI/Notifications/notification_generic"
		}
	}
	# Connection to relevant tutorial lesson
	on_action_taken = {
		effect = {
			# Connect to the trade buildings lesson
			start_tutorial_lesson = {
				tutorial_lesson = trade_buildings_lesson
			}
			# Provide a small bonus for acknowledging
			add_gold = 10
		}
	}
}

# Trade Route Disruption - Shown when a trade route becomes disrupted
trade_route_disruption_advice = {
	type = important_action
	# Check if player has a disrupted trade route
	trigger = {
		exists = this
		is_ai = no
		# Check if tutorials are enabled for this player
		is_tutorial_enabled = yes
		# Player should be aware of the trade system already
		has_character_flag = viewed_trade_introduction_step1
		# County must be on a silk road and recently disrupted
		any_held_title = {
			tier = county
			has_county_flag = on_silk_road
			has_county_flag = on_disrupted_trade_route
			# The disruption should be recent (flag set within last 30 days)
			NOT = {
				has_county_flag = notified_disruption
			}
			# Make sure disruption is significant
			NOT = {
				development_level < 10
			}
		}
		# Only show if the character has some investment in trade
		any_held_title = {
			tier = county
			any_county_holding = {
				OR = {
					has_building = market_square
					has_building = trading_post
					has_building = caravanserai
				}
			}
		}
	}
	# Mark the county as notified
	immediate = {
		random_held_title = {
			limit = {
				tier = county
				has_county_flag = on_silk_road
				has_county_flag = on_disrupted_trade_route
				NOT = {
					has_county_flag = notified_disruption
				}
			}
			set_county_flag = {
				flag = notified_disruption
				days = 365
			}
		}
	}
	# Function to check if this advice should be created
	check_create_action = {
		save_temporary_scope_as = character
		# Create the advice with proper title and description
		create_important_action = {
			title = trade_route_disruption_advice_title
			desc = trade_route_disruption_advice_desc
			# Add sound effect for notification
			soundeffect = "event:/SFX/UI/Notifications/notification_warning"
		}
	}
	# Connection to relevant tutorial lesson or event
	on_action_taken = {
		effect = {
			# Connect to the lesson about trade policies
			start_tutorial_lesson = {
				tutorial_lesson = trade_policies_lesson
			}
		}
	}
}

# Trade Prosperity Achieved - Shown when a county reaches high prosperity
trade_prosperity_advice = {
	type = important_action
	# Check if player has a county with high trade prosperity
	trigger = {
		exists = this
		is_ai = no
		# Check if tutorials are enabled for this player
		is_tutorial_enabled = yes
		# Player must have completed the trade introduction
		has_character_flag = completed_trade_introduction
		# But not seen this specific advice yet
		NOT = {
			has_character_flag = seen_trade_prosperity_advice
		}
		# Must have a county with high prosperity that hasn't been notified yet
		any_held_title = {
			tier = county
			has_county_flag = on_silk_road
			has_county_flag = high_trade_prosperity
			# Prosperity should be recent (within last 30 days)
			NOT = {
				has_county_flag = notified_high_prosperity
			}
			# County should have a significant amount of development
			development_level >= 15
			# At least 3 holdings to ensure it's a significant county
			num_of_holdings >= 3
		}
		# Player should have at least one trade building
		any_held_title = {
			tier = county
			any_county_holding = {
				OR = {
					has_building = market_square
					has_building = trading_post
					has_building = caravanserai
				}
			}
		}
	}
	# Mark the county as notified and set player flag
	immediate = {
		add_character_flag = {
			flag = seen_trade_prosperity_advice
			days = -1
		}
		random_held_title = {
			limit = {
				tier = county
				has_county_flag = on_silk_road
				has_county_flag = high_trade_prosperity
				NOT = {
					has_county_flag = notified_high_prosperity
				}
			}
			set_county_flag = {
				flag = notified_high_prosperity
				days = 365
			}
		}
	}
	# Function to check if this advice should be created
	check_create_action = {
		save_temporary_scope_as = character
		# Create the advice with proper title and description
		create_important_action = {
			title = trade_prosperity_advice_title
			desc = trade_prosperity_advice_desc
			# Add sound effect for congratulatory notification
			soundeffect = "event:/SFX/UI/Notifications/notification_positive"
		}
	}
	# Connection to relevant tutorial lesson or event
	on_action_taken = {
		effect = {
			# Connect to introduction lesson for detailed overview
			start_tutorial_lesson = {
				tutorial_lesson = trade_introduction_lesson
			}
			# Provide a small bonus for acknowledging
			add_gold = 25
			add_prestige = 50
		}
	}
}

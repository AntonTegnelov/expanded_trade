# Trade Character Interactions
# Core interactions for merchant-related activities
# Invite a merchant to your court to boost trade and gain an advisor
invite_merchant_interaction = {
	category = interaction_category_diplomatic
	icon = invite_to_court
	desc = invite_merchant_interaction_desc
	# AI target selection
	ai_targets = {
		ai_recipients = liege
		realm_characters
	}
	# Standard traits that give bonuses/penalties for diplomatic activities
	actor_opinion_modifier_eligible_for_hostility_reduction = yes
	recipient_opinion_modifier_eligible_for_hostility_reduction = yes
	opinion_acceptance_modifier_factor = 2
	# Only rulers of appropriate rank can invite merchants
	is_shown = {
		is_ruler = yes
		# Need at least a county to attract merchants
		highest_held_title_tier >= tier_county
	}
	is_valid_showing_failures_only = {
		# Only initiate if we don't already have a merchant
		custom_description = {
			text = already_has_merchant
			NOT = {
				any_courtier = {
					has_character_flag = merchant_character
				}
			}
		}
	}
	# Cooldown between uses
	cooldown = {
		days = 365
	}
	# Cost to invite merchant
	cost = {
		gold = 50
		prestige = 25
	}
	# Simple UI greeting
	greeting = friendly
	# What happens when the interaction is sent
	on_accept = {
		# Generate the merchant character
		scope:actor = {
			generate_merchant_character_effect = yes
			# Create a positive opinion between the ruler and merchant
			scope:merchant = {
				opinion = {
					target = scope:actor
					modifier = patronage_opinion
					opinion = 40
				}
			}
			# Add minor trade boost to capital county
			capital_county = {
				add_county_modifier = {
					modifier = welcoming_trade_policy
					months = 12
				}
			}
			# Small prestige boost
			add_prestige = 25
		}
	}
	# AI decision-making
	ai_accept = {
		base = 50
		# More likely if good at stewardship
		modifier = {
			add = {
				value = scope:actor.stewardship
				multiply = 2
			}
			desc = "stewardship_skill"
		}
		# Wealth factors
		modifier = {
			trigger = {
				scope:actor.gold > 150
			}
			add = 10
			desc = "wealthy_ruler"
		}
		modifier = {
			trigger = {
				scope:actor.gold < 75
			}
			add = -10
			desc = "low_funds"
		}
		# Personality factors
		modifier = {
			trigger = {
				scope:actor.is_greedy = yes
			}
			add = 15
			desc = "greedy_trait"
		}
		modifier = {
			trigger = {
				scope:actor.is_ambitious = yes
			}
			add = 10
			desc = "ambitious_trait"
		}
	}
	ai_will_do = {
		base = 10
		# More likely if good at stewardship
		modifier = {
			factor = 1.5
			scope:actor = {
				stewardship > 10
			}
		}
		# More likely if greedy or ambitious
		modifier = {
			factor = 1.5
			scope:actor = {
				OR = {
					has_trait = greedy
					has_trait = ambitious
				}
			}
		}
		# Less likely if altruistic or content
		modifier = {
			factor = 0.5
			scope:actor = {
				OR = {
					has_trait = generous
					has_trait = content
				}
			}
		}
		# More likely if on a trade route
		modifier = {
			factor = 2
			scope:actor = {
				any_realm_county = {
					has_county_flag = on_active_trade_route
				}
			}
		}
	}
}

# Establish a trade agreement between two rulers
establish_trade_agreement_interaction = {
	category = interaction_category_diplomatic
	icon = alliance
	desc = establish_trade_agreement_interaction_desc
	# AI target selection
	ai_targets = {
		ai_recipients = neighboring_independent_rulers
	}
	# Standard traits that give bonuses/penalties for diplomatic activities
	actor_opinion_modifier_eligible_for_hostility_reduction = yes
	recipient_opinion_modifier_eligible_for_hostility_reduction = yes
	opinion_acceptance_modifier_factor = 2
	# Only independent rulers can establish trade agreements
	is_shown = {
		is_ruler = yes
		is_independent_ruler = yes
		highest_held_title_tier >= tier_county
	}
	# Requirements for valid interaction
	is_valid_showing_failures_only = {
		# Can't establish agreement with self
		custom_description = {
			text = cannot_trade_with_self
			NOT = {
				this = scope:recipient
			}
		}
		# Can only have one active trade agreement per ruler
		custom_description = {
			text = already_has_trade_agreement_with_ruler
			NOT = {
				has_relation_flag = {
					flag = has_trade_agreement
					target = scope:recipient
				}
			}
		}
	}
	# Cost to establish trade agreement
	cost = {
		gold = 150
		prestige = 100
	}
	# Simple UI greeting
	greeting = friendly
	# What happens when the interaction is accepted
	on_accept = {
		# Set flags for both rulers
		scope:actor = {
			set_relation_flag = {
				flag = has_trade_agreement
				target = scope:recipient
				years = 10
			}
			# Improve opinion between rulers
			opinion = {
				target = scope:recipient
				modifier = trade_agreement_opinion
				opinion = 20
			}
			# Add trade bonus to capital county
			capital_county = {
				add_county_modifier = {
					modifier = permanent_trade_relations
					years = 10
				}
			}
			# Prestige and piety boost
			add_prestige = 150
		}
		# Apply same benefits to recipient
		scope:recipient = {
			set_relation_flag = {
				flag = has_trade_agreement
				target = scope:actor
				years = 10
			}
			# Improve opinion between rulers
			opinion = {
				target = scope:actor
				modifier = trade_agreement_opinion
				opinion = 20
			}
			# Add trade bonus to capital county
			capital_county = {
				add_county_modifier = {
					modifier = permanent_trade_relations
					years = 10
				}
			}
			# Prestige boost
			add_prestige = 150
		}
	}
	# AI acceptance logic
	ai_accept = {
		base = 0
		# Simple distance penalty based on neighboring status
		modifier = {
			trigger = {
				scope:actor = {
					is_neighbor_to = scope:recipient
				}
			}
			add = 25
			desc = "neighboring_realms"
		}
		# Opinion modifier (more likely to accept if they like you)
		modifier = {
			trigger = {
				opinion = {
					target = scope:actor
					value > 0
				}
			}
			add = {
				value = 15
			}
			desc = "positive_opinion"
		}
		modifier = {
			trigger = {
				opinion = {
					target = scope:actor
					value > 50
				}
			}
			add = {
				value = 15
			}
			desc = "high_opinion"
		}
		# More likely if on trade route
		modifier = {
			trigger = {
				any_realm_county = {
					has_county_flag = on_active_trade_route
				}
			}
			add = 20
			desc = "has_trade_route_in_realm"
		}
		# More likely if good at stewardship
		modifier = {
			add = {
				value = scope:recipient.stewardship
				divide = 2
			}
			desc = "recipient_stewardship"
		}
		# Greedy characters want more money
		modifier = {
			trigger = {
				scope:recipient.is_greedy = yes
			}
			add = 15
			desc = "is_greedy"
		}
		# Stubborn characters less likely to agree
		modifier = {
			trigger = {
				scope:recipient.is_stubborn = yes
			}
			add = -10
			desc = "is_stubborn"
		}
	}
	# How likely is the AI to initiate this
	ai_will_do = {
		base = 5
		# More likely if good at stewardship
		modifier = {
			factor = 1.5
			stewardship > 10
		}
		# More likely if ambitious
		modifier = {
			factor = 1.3
			has_trait = ambitious
		}
		# More likely if greedy
		modifier = {
			factor = 1.2
			has_trait = greedy
		}
		# Less likely if content
		modifier = {
			factor = 0.7
			has_trait = content
		}
		# More likely if the realm is on a trade route
		modifier = {
			factor = 2
			any_realm_county = {
				has_county_flag = on_active_trade_route
			}
		}
		# More likely if has a positive opinion
		modifier = {
			factor = 1.5
			opinion = {
				target = scope:recipient
				value > 50
			}
		}
	}
}

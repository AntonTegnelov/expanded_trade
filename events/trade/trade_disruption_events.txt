namespace = trade_disruption
# Trade route disrupted notification for county holder
character_event = {
	id = trade_disruption.0001
	title = trade_route_disrupted_title
	desc = trade_route_disrupted_desc
	theme = trade
	left_portrait = {
		character = root
		animation = worry
	}
	trigger = {
		any_held_title = {
			tier = county
			is_on_active_trade_route_trigger = yes
			has_county_flag = trade_route_disrupted
		}
	}
	immediate = {
		random_held_title = {
			limit = {
				tier = county
				is_on_active_trade_route_trigger = yes
				has_county_flag = trade_route_disrupted
			}
			save_scope_as = disrupted_county
		}
	}
	option = {
		name = trade_route_disrupted.a
		custom_tooltip = trade_route_disrupted_tooltip
		scope:disrupted_county = {
			add_county_modifier = {
				modifier = trade_route_disrupted
				months = 12
			}
			remove_county_flag = on_active_trade_route
			set_county_flag = on_disrupted_trade_route
		}
	}
}

# Trade route disrupted notification for occupier
character_event = {
	id = trade_disruption.0002
	title = trade_route_occupied_title
	desc = trade_route_occupied_desc
	theme = trade
	left_portrait = {
		character = root
		animation = scheme
	}
	trigger = {
		any_occupied_title = {
			tier = county
			is_on_active_trade_route_trigger = yes
			NOT = {
				has_county_flag = trade_route_disrupted
			}
		}
	}
	immediate = {
		random_occupied_title = {
			limit = {
				tier = county
				is_on_active_trade_route_trigger = yes
				NOT = {
					has_county_flag = trade_route_disrupted
				}
			}
			save_scope_as = occupied_county
		}
	}
	option = {
		name = trade_route_occupied.a
		custom_tooltip = trade_route_occupied_tooltip
		scope:occupied_county = {
			set_county_flag = trade_route_disrupted
			remove_county_flag = on_active_trade_route
			set_county_flag = on_disrupted_trade_route
			add_county_modifier = {
				modifier = trade_route_disrupted
				months = 12
			}
		}
	}
}

# Trade disruption notification for county holder
character_event = {
	id = trade_disruption.0003
	title = trade_disruption_events.0001.t
	desc = trade_disruption_events.0001.desc
	theme = war
	left_portrait = {
		character = root
		animation = worry
	}
	immediate = {
		debug_log = "[GetDateString]: Event scope: trade_disruption.0003 - Root=[Root.GetID]"
		debug_log = "[GetDateString]: Executing immediate effects in event trade_disruption.0003"
		save_scope_as = disruption_ruler
		# Find disrupted county
		random_held_title = {
			limit = {
				tier = county
				has_county_flag = on_disrupted_trade_route
			}
			debug_log = "[GetDateString]: Found disrupted county [This.GetID]"
			save_scope_as = disrupted_county
		}
	}
	option = {
		name = trade_disruption_events.0001.a
		debug_log = "[GetDateString]: Executing disruption acceptance effects in event trade_disruption.0003"
		# Sad
		add_stress = minor_stress_gain
		# Economic loss
		add_gold = -10
		# Decrease prosperity
		scope:disrupted_county = {
			debug_log = "[GetDateString]: Decreasing prosperity for county [This.GetID]"
			change_variable = {
				name = trade_prosperity_level
				subtract = 1
			}
			# Ensure it doesn't go below 0
			if = {
				limit = {
					var:trade_prosperity_level < 0
				}
				set_variable = {
					name = trade_prosperity_level
					value = 0
				}
			}
		}
	}
	# Try to redirect trade
	option = {
		name = trade_disruption_events.0001.b
		debug_log = "[GetDateString]: Executing trade redirection effects in event trade_disruption.0003"
		trigger = {
			stewardship >= 8
		}
		# Try to redirect trade to minimize losses
		random = {
			chance = 25
			add_character_modifier = {
				modifier = trade_redirected
				years = 2
			}
			scope:disrupted_county = {
				set_county_flag = trade_partially_redirected
			}
		}
		# Still lose some gold
		add_gold = -5
	}
	# Invest to protect trade
	option = {
		name = trade_disruption_events.0001.c
		# Cost gold
		add_gold = -20
		# But potentially restore trade faster
		scope:disrupted_county = {
			trigger_event = {
				id = trade_disruption.0005
				days = {
					30
					60
				}
			}
		}
	}
}

# Trade disruption notification for occupier
character_event = {
	id = trade_disruption.0004
	title = trade_disruption_events.0002.t
	desc = trade_disruption_events.0002.desc
	theme = war
	left_portrait = {
		character = root
		animation = personality_bold
	}
	immediate = {
		save_scope_as = occupier_ruler
		# Find occupied county
		random_occupied_title = {
			limit = {
				tier = county
				has_county_flag = on_disrupted_trade_route
			}
			save_scope_as = occupied_county
		}
	}
	# Plunder trade goods
	option = {
		name = trade_disruption_events.0002.a
		# Gain gold from plundering
		add_gold = {
			value = 15
			multiply = scope:occupied_county.development_level
			divide = 10
		}
		# But county suffers more
		scope:occupied_county = {
			add_county_modifier = {
				modifier = plundered_trade_goods
				years = 3
			}
		}
	}
	# Impose trade tax
	option = {
		name = trade_disruption_events.0002.b
		# Smaller immediate gain
		add_gold = {
			value = 8
			multiply = scope:occupied_county.development_level
			divide = 10
		}
		# But sustainable income
		scope:occupied_county = {
			add_county_modifier = {
				modifier = forced_trade_taxation
				years = 1
			}
		}
		# Monthly income from trade tax
		add_character_flag = {
			flag = collecting_trade_tax
			years = 1
		}
	}
	# Allow trade to continue for a fee
	option = {
		name = trade_disruption_events.0002.c
		trigger = {
			stewardship >= 8
		}
		# Immediate gain
		add_gold = {
			value = 10
			multiply = scope:occupied_county.development_level
			divide = 10
		}
		# And county recovers some trade
		scope:occupied_county = {
			add_county_modifier = {
				modifier = trade_continues_under_occupation
				years = 1
			}
		}
	}
}

# Trade route restoration event
character_event = {
	id = trade_disruption.0005
	title = trade_route_restored_title
	desc = trade_route_restored_desc
	theme = trade
	left_portrait = {
		character = root
		animation = happiness
	}
	trigger = {
		any_held_title = {
			tier = county
			has_county_flag = on_disrupted_trade_route
			NOT = {
				has_county_modifier = trade_route_disrupted
			}
		}
	}
	immediate = {
		random_held_title = {
			limit = {
				tier = county
				has_county_flag = on_disrupted_trade_route
				NOT = {
					has_county_modifier = trade_route_disrupted
				}
			}
			save_scope_as = restored_county
		}
	}
	option = {
		name = trade_route_restored.a
		custom_tooltip = trade_route_restored_tooltip
		scope:restored_county = {
			remove_county_flag = on_disrupted_trade_route
			set_county_flag = on_active_trade_route
			add_county_modifier = {
				modifier = trade_route_restored
				years = 1
			}
		}
	}
}
